name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g. v0.0.1)'
        required: true
  workflow_run:
    workflows: ["Release Binary"]
    types:
      - completed

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        platform: [linux/amd64, linux/arm64]

    steps:
      - name: Set release tag
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            echo "RELEASE_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "RELEASE_TAG=${{ github.event.workflow_run.head_branch }}" >> $GITHUB_ENV
          else
            echo "RELEASE_TAG=unknown" >> $GITHUB_ENV
          fi

      - name: Validate RELEASE_TAG
        run: |
          if [[ -z "$RELEASE_TAG" || "$RELEASE_TAG" == "unknown" ]]; then
          echo "Missing or invalid RELEASE_TAG"
          exit 1
          fi

      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3.6.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3.11.1

      - name: Login to DockerHub
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Transform platform for artifact name
        run: |
          OS="${{ matrix.platform%%/* }}"
          ARCH="${{ matrix.platform##*/ }}"
          # Capitalize OS first letter
          OS="$(tr '[:lower:]' '[:upper:]' <<< ${OS:0:1})${OS:1}"
          # Map arch amd64 â†’ x86_64
          if [ "$ARCH" = "amd64" ]; then ARCH="x86_64"; fi
          SAFE_PLATFORM="${OS}_${ARCH}"
          echo "SAFE_PLATFORM=$SAFE_PLATFORM" >> $GITHUB_ENV

      - name: Download release artifact
        run: |
          TAG="${RELEASE_TAG}"
          ARCHIVE="mcpd_${SAFE_PLATFORM}.tar.gz"
          curl -L -o $ARCHIVE "https://github.com/${GITHUB_REPOSITORY}/releases/download/$TAG/$ARCHIVE"
          tar -xf $ARCHIVE -C .

      - name: Build & push Docker image
        uses: docker/build-push-action@263435318d21b8e681c14492fe198d362a7d2c83 # v6.18.0
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            mzdotai/mcpd:${{ env.RELEASE_TAG }}-${{ env.SAFE_PLATFORM }}
            mzdotai/mcpd:latest
          build-args: |
            MCPD_VERSION=${{ env.RELEASE_TAG }}
          file: ./Dockerfile